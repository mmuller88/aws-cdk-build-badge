{
  "Resources": {
    "BuildBadgebadgeServiceRoleE417F11F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-build-badge-demo-stack/BuildBadge/badge/ServiceRole/Resource"
      }
    },
    "BuildBadgebadgeServiceRoleDefaultPolicy4004EC3E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:ListBuildsForProject",
                "codebuild:BatchGetBuilds"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BuildBadgebadgeServiceRoleDefaultPolicy4004EC3E",
        "Roles": [
          {
            "Ref": "BuildBadgebadgeServiceRoleE417F11F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-build-badge-demo-stack/BuildBadge/badge/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "BuildBadgebadgeA0B40829": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "b800ce618ce7b79f831b5de43680d2c0614df3615714bfc112038aee5bbfc06d.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "BuildBadgebadgeServiceRoleE417F11F",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "ACCOUNT": "123",
            "DEFAULT_PROJECT_NAME": "",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs12.x",
        "Timeout": 900
      },
      "DependsOn": [
        "BuildBadgebadgeServiceRoleDefaultPolicy4004EC3E",
        "BuildBadgebadgeServiceRoleE417F11F"
      ],
      "Metadata": {
        "aws:cdk:path": "my-build-badge-demo-stack/BuildBadge/badge/Resource",
        "aws:asset:path": "asset.b800ce618ce7b79f831b5de43680d2c0614df3615714bfc112038aee5bbfc06d",
        "aws:asset:property": "Code"
      }
    },
    "BuildBadgeLambdaRestApi67D65870": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "BinaryMediaTypes": [
          "*/*"
        ],
        "Name": "LambdaRestApi"
      },
      "Metadata": {
        "aws:cdk:path": "my-build-badge-demo-stack/BuildBadge/LambdaRestApi/Resource"
      }
    },
    "BuildBadgeLambdaRestApiCloudWatchRole5C0B77BD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-build-badge-demo-stack/BuildBadge/LambdaRestApi/CloudWatchRole/Resource"
      }
    },
    "BuildBadgeLambdaRestApiAccount2D0F8B5D": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "BuildBadgeLambdaRestApiCloudWatchRole5C0B77BD",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "BuildBadgeLambdaRestApi67D65870"
      ],
      "Metadata": {
        "aws:cdk:path": "my-build-badge-demo-stack/BuildBadge/LambdaRestApi/Account"
      }
    },
    "BuildBadgeLambdaRestApiDeployment08CF77EEfd4e30eea1638e80fe7e6c5b287361f8": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "BuildBadgeLambdaRestApi67D65870"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "BuildBadgeLambdaRestApiproxyANY2FB04D37",
        "BuildBadgeLambdaRestApiproxyAA6A28B8",
        "BuildBadgeLambdaRestApiANYB4ECA9EA"
      ],
      "Metadata": {
        "aws:cdk:path": "my-build-badge-demo-stack/BuildBadge/LambdaRestApi/Deployment/Resource"
      }
    },
    "BuildBadgeLambdaRestApiDeploymentStageprodFEFA21FC": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "BuildBadgeLambdaRestApi67D65870"
        },
        "DeploymentId": {
          "Ref": "BuildBadgeLambdaRestApiDeployment08CF77EEfd4e30eea1638e80fe7e6c5b287361f8"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "my-build-badge-demo-stack/BuildBadge/LambdaRestApi/DeploymentStage.prod/Resource"
      }
    },
    "BuildBadgeLambdaRestApiproxyAA6A28B8": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "BuildBadgeLambdaRestApi67D65870",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "BuildBadgeLambdaRestApi67D65870"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-build-badge-demo-stack/BuildBadge/LambdaRestApi/Default/{proxy+}/Resource"
      }
    },
    "BuildBadgeLambdaRestApiproxyANYApiPermissionmybuildbadgedemostackBuildBadgeLambdaRestApi1E56DD4EANYproxyFEBE5AAA": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "BuildBadgebadgeA0B40829",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "BuildBadgeLambdaRestApi67D65870"
              },
              "/",
              {
                "Ref": "BuildBadgeLambdaRestApiDeploymentStageprodFEFA21FC"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-build-badge-demo-stack/BuildBadge/LambdaRestApi/Default/{proxy+}/ANY/ApiPermission.mybuildbadgedemostackBuildBadgeLambdaRestApi1E56DD4E.ANY..{proxy+}"
      }
    },
    "BuildBadgeLambdaRestApiproxyANYApiPermissionTestmybuildbadgedemostackBuildBadgeLambdaRestApi1E56DD4EANYproxy9DEC5D93": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "BuildBadgebadgeA0B40829",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "BuildBadgeLambdaRestApi67D65870"
              },
              "/test-invoke-stage/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-build-badge-demo-stack/BuildBadge/LambdaRestApi/Default/{proxy+}/ANY/ApiPermission.Test.mybuildbadgedemostackBuildBadgeLambdaRestApi1E56DD4E.ANY..{proxy+}"
      }
    },
    "BuildBadgeLambdaRestApiproxyANY2FB04D37": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Ref": "BuildBadgeLambdaRestApiproxyAA6A28B8"
        },
        "RestApiId": {
          "Ref": "BuildBadgeLambdaRestApi67D65870"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "BuildBadgebadgeA0B40829",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-build-badge-demo-stack/BuildBadge/LambdaRestApi/Default/{proxy+}/ANY/Resource"
      }
    },
    "BuildBadgeLambdaRestApiANYApiPermissionmybuildbadgedemostackBuildBadgeLambdaRestApi1E56DD4EANYE1C81673": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "BuildBadgebadgeA0B40829",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "BuildBadgeLambdaRestApi67D65870"
              },
              "/",
              {
                "Ref": "BuildBadgeLambdaRestApiDeploymentStageprodFEFA21FC"
              },
              "/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-build-badge-demo-stack/BuildBadge/LambdaRestApi/Default/ANY/ApiPermission.mybuildbadgedemostackBuildBadgeLambdaRestApi1E56DD4E.ANY.."
      }
    },
    "BuildBadgeLambdaRestApiANYApiPermissionTestmybuildbadgedemostackBuildBadgeLambdaRestApi1E56DD4EANYEF134B78": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "BuildBadgebadgeA0B40829",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "BuildBadgeLambdaRestApi67D65870"
              },
              "/test-invoke-stage/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-build-badge-demo-stack/BuildBadge/LambdaRestApi/Default/ANY/ApiPermission.Test.mybuildbadgedemostackBuildBadgeLambdaRestApi1E56DD4E.ANY.."
      }
    },
    "BuildBadgeLambdaRestApiANYB4ECA9EA": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Fn::GetAtt": [
            "BuildBadgeLambdaRestApi67D65870",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "BuildBadgeLambdaRestApi67D65870"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "BuildBadgebadgeA0B40829",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-build-badge-demo-stack/BuildBadge/LambdaRestApi/Default/ANY/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Modules": "aws-cdk=1.81.0,@aws-cdk/assets=1.83.0,@aws-cdk/aws-apigateway=1.83.0,@aws-cdk/aws-applicationautoscaling=1.83.0,@aws-cdk/aws-autoscaling-common=1.83.0,@aws-cdk/aws-cloudwatch=1.83.0,@aws-cdk/aws-codeguruprofiler=1.83.0,@aws-cdk/aws-ec2=1.83.0,@aws-cdk/aws-ecr=1.83.0,@aws-cdk/aws-ecr-assets=1.83.0,@aws-cdk/aws-events=1.83.0,@aws-cdk/aws-iam=1.83.0,@aws-cdk/aws-kms=1.83.0,@aws-cdk/aws-lambda=1.83.0,@aws-cdk/aws-lambda-nodejs=1.83.0,@aws-cdk/aws-logs=1.83.0,@aws-cdk/aws-s3=1.83.0,@aws-cdk/aws-s3-assets=1.83.0,@aws-cdk/aws-sqs=1.83.0,@aws-cdk/aws-ssm=1.83.0,@aws-cdk/cloud-assembly-schema=1.83.0,@aws-cdk/core=1.83.0,@aws-cdk/cx-api=1.83.0,@aws-cdk/region-info=1.83.0,jsii-runtime=node.js/v14.15.4"
      },
      "Metadata": {
        "aws:cdk:path": "my-build-badge-demo-stack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "BuildBadgeLambdaRestApiEndpoint63A20E45": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "BuildBadgeLambdaRestApi67D65870"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "BuildBadgeLambdaRestApiDeploymentStageprodFEFA21FC"
            },
            "/"
          ]
        ]
      }
    },
    "BuildBadgeBadgeBuildUrlDECA8A32": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "BuildBadgeLambdaRestApi67D65870"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "BuildBadgeLambdaRestApiDeploymentStageprodFEFA21FC"
            },
            "/?url=true&projectName=XXX"
          ]
        ]
      }
    },
    "BuildBadgeBadgeUrlB81442AA": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "BuildBadgeLambdaRestApi67D65870"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "BuildBadgeLambdaRestApiDeploymentStageprodFEFA21FC"
            },
            "/?projectName=XXX"
          ]
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store."
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 4 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}